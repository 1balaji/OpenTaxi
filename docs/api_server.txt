*************************
** OpenTaxi server API **
*************************

Method implementation scripts are stored in "api" directory, in appropriate subdirectories and are named "index.php", like this:
/
 + api
 | + car
 | | + list_colors
 | | | - index.php
 | | + list_models
 | |   - index.php
 | + order
 | | + accept
 | |   - index.php
 ...

This is to avoid URL rewriting and easily use servers like lighttpd or nginx.

API methods implementation
~~~~~~~~~~~~~~~~~~~~~~~~~~

First 3 lines of the script recommended to be:

<?php
global $DB, $RQ, $USER, $CONFIG;
require_once('../../../inc/bootstrap.inc.php');

Bootstrap script checks the validity of client-server API request and parses it.
On success, connects to database, retrieves user data and checks the signature.

4 global variables are available after bootstrap:
* $DB - MongoDB class instance connected to "opentaxi" DB
* $RQ - API request as an associative array
* $USER - Authenticated user's data as an associative array
* $CONFIG - Configuration data (inc/config.inc.php file)

Script template can be found in "docs/api_server_method_template" directory of this distribution.

Unauthorized method call
~~~~~~~~~~~~~~~~~~~~~~~~

Some actions (such as user self-registration) must be allowed to call without ID and/or signature. These methods must be listed in $CONFIG['API']['ALLOWED_UNAUTH_METHODS'].

Challenge/response
~~~~~~~~~~~~~~~~~~

If a method call requires challenge/response confirmation (CAPTCHA or SMS on user registration), you can use the provided mechanism.

require_once('../../../inc/challenge.inc.php');

function challenge_avail(string $type); // Returns true if specified challenge module is available.

function challenge(string $type); // Generates response with 411 error code and generates challenge data. Returns true on successful challenge.

function challenge_first(array $types); // Makes challenge() call with first challenge module available. Returns true on successful challenge.

Challenge module (inc/challenge/<module>.inc.php) must implement two functions:

function challenge_<module>_generate($RQ); // Must generate and return challenge data.

function challenge_<module>_check($data); // Must return true if response data is valid.